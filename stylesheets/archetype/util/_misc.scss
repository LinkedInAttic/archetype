// @category  utilities

// throw an error if archetype/util has not been registered
$a-blackhole: require-archetype-modules(archetype/util);

// simplify checking if a value is defined before outputting it to a property
// @mixin     if-set
// @param     $property {String} css property to define
// @param     $value {String} a valid css value for property
// @param     $ignore {List} a list of "falsy" values
// @usage
// =if-set(margin, $margin, $ignore: (5px 10px)); // will only output margin if it is not 5px or 10px
@mixin if-set($property, $value: false, $ignore: false) {
  @if($ignore == false) {
    $ignore: (0 0px);
  }
  @if($value != false and $value != null and not index(-archetype-list($ignore), $value)) {
    #{$property}: $value;
  }
}

// a mixin that prevents a given block from executing multiple times
// @mixin     do-once
// @param     $name {String} identifier to check/register
@mixin do-once($name) {
  @if do-once($name) {
    @content;
  }
}

// helper mixin for iterating over a meta object that contains multiple values
// @mixin     with-each-value
// @param     $values {*} the value or meta object of values to iterate over
// @content
@mixin with-each-value($values) {
  $values: if(has-multiple-values($values), map-get($values, values), append((), $values));
  @each $value in $values {
    $archetype-current-value: $value !global;
    @content;
    $archetype-current-value: null !global;
  }
}

