// BEM support
$CONFIG_BEM_MODIFIER_SEPARATOR:   '--' !default;                                                    // the separator to denote the BEM modifier (e.g. .my-block--enabled)
$CONFIG_BEM_ELEMENT_SEPARATOR:    '__' !default;                                                    // the separator to denote the BEM element (e.g. .my-block__element)

// misc
$CONTENT_PLACEHOLDER:             '\0020' !default;                                                 // content placeholder (ensures block elements display correctly even if they're empty)
$CONFIG_DISABLED_CSS:             () !default;                                                      // a list of CSS3 features to always disable when using output-style()
$CONFIG_GENERATED_TAG_PREFIX:     x-archetype !default;                                             // the prefix for the tag name to create when using ie-pseudo method
$CONFIG_GENERATED_TAG_CSS:        false !default;                                                   // styles to apply to the generated tag when using ie-pseudo method (use this as a way to reset styles on these tags)
$CONFIG_GENERATED_TAG_INLINE:     true !default;                                                    // if `true` insert the styles inline on the generated tag, otherwise insert the styles in a unique css rule

// z-layers
$CONFIG_Z_INDEX_BASE:             0 !default;                                                       // the default starting layer for z-index calculations
$CONFIG_Z_LAYERS_OFFSET:          100 !default;                                                     // the offset between z-layers
$CONFIG_Z_LAYERS:                 (default dialog navigation) !default;                             // the orders for the z-layers

// sprites
$CONFIG_DISABLE_STYLEGUIDE_SPRITES: false !default;                                                 // disable all sprite generation in styleguide

// smart content
$CONFIG_USE_SMART_CONTENT:        false !default;                                                   // use @extend when possible to smartly output content

// states used when printing out styles
$CONFIG_STATE_PREFIX:             '' !default;                                                      // prefix state classnames @see to-style()
$CONFIG_STATE_NO_PREFIX:          () !default;                                                      // states to never apply prefix to
$CONFIG_STATE_BEM:                false !default;                                                   // use the BEM syntax for printing states [true|false|only]
// a mapping for state names to selectors
$CORE_STATE_MAPPINGS: (
  'hover' : (
    selector  : '&.#{$CONFIG_STATE_PREFIX}hover, &:hover, &.#{$CONFIG_STATE_PREFIX}focus, &:focus',
    states    : hover focus
  ),
  'hover-only' : (
    selector  : '&.#{$CONFIG_STATE_PREFIX}hover, &:hover',
    states    : hover
  ),
  'focus' : (
    selector  : '&.#{$CONFIG_STATE_PREFIX}focus, &:focus',
    states    : focus
  ),
  'active' : (
    selector  : '&.#{$CONFIG_STATE_PREFIX}active, &:active',
    states    : active
  ),
  'visited' : (
    selector  : '&.#{$CONFIG_STATE_PREFIX}visited, &:visited',
    states    : visited
  ),
  'disabled' : (
    selector  : '&.#{$CONFIG_STATE_PREFIX}disabled, &[disabled]',
    states    : disabled
  ),
  'checked' : (
    selector  : '&.#{$CONFIG_STATE_PREFIX}checked, &:checked',
    states    : checked
  ),
  'focus-inner' : (
    selector  : '&::-moz-focus-inner',
    states    : null
  )
);
$CONFIG_STATE_MAPPINGS: () !default;
$CONFIG_STATE_MAPPINGS: map-merge($CORE_STATE_MAPPINGS, $CONFIG_STATE_MAPPINGS);
